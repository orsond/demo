---

task-config: &task-config
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: maven
      tag: '3.6.1-jdk-8-slim'
  inputs:
  - name: source-code
  outputs:
  - name: source-code

resource_types:
- name: git-multibranch
  type: docker-image
  source:
    repository: cfcommunity/git-multibranch-resource

resources:
- name: source-code
  type: git-multibranch
  source:
    uri: https://github.com/orsond/demo
    branches: '.*'
    ignore_branches: 'master'


jobs:
- name: build
  plan:
    - get: source-code
      trigger: true
    - task: build-local
      config:
      
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            mvn package
- name: test
  plan:
    - get: source-code
      trigger: true
    - task: tests
      config:
      
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            mvn test
- name: integration-test
  serial: true
  plan:
    - get: source-code
      trigger: true
    - task: set-up-dependencies
      config:
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            mvn integration-test
    - task: start-application
      config:
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
    - task: run-tests
      config:
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            mvn integration-test
- name: sonar-scan
  serial: true
  plan:
    - get: source-code
      trigger: true
    - task: build-local
      config:
      
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            mvn test
- name: artifact
  serial: true
  plan:
    - get: source-code
      trigger: true
      passed: [build,test,sonar-scan,integration-test]
    - task: build-artifact
      config:
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
- name: deploy
  serial: true
  plan:
    - get: source-code
      trigger: true
      passed: [artifact]
    - task: get-git
      file: source-code/ci/get-git.yml
- name: postdeployment-test
  serial: true
  plan:
    - get: source-code
      trigger: true
      passed: [deploy]
    - task: run-selenium-test
      config:
        << : *task-config
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
- name: set-timer-for-removal
  plan:
  - get: source-code
    trigger: true
    passed: [deploy]
  - task: create-timer
    config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: alpine/git
            tag: '1.0.7'
        inputs:
        - name: source-code
        run:
          path: sh
          args:
          - -exc
          - |
            cd source-code
            branch=`git branch | grep -v "*" | awk '{$1=$1};1'`
            echo "---" > branch
            echo "branch: $branch" >> branch
            cat branch
            wget -c "http://192.168.1.3:8080/api/v1/cli?arch=amd64&platform=linux" -O fly
            chmod +x fly
            ./fly --target t login --concourse-url http://192.168.1.3:8080 -u test -p test
            ./fly -t t sp -c ci/pipeline-delete-transient.yml -p delete-$branch -v branch=$branch -n
            ./fly -t t unpause-pipeline -p delete-$branch
            
